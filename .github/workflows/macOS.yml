name: Build on macOS
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'release/*'

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Checkout rp3802
        uses: actions/checkout@v4
        with:
          path: rp3802

      - name: Checkout pico-sdk
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: 2.1.1
          path: pico-sdk

      - name: Checkout pico-sdk submodules
        working-directory: ${{github.workspace}}/pico-sdk
        run: git submodule update --init
      - name: Install dependencies
        run: |
          brew install --formula cmake
          brew install --cask gcc-arm-embedded

      - name: Build Project (pico)
        working-directory: ${{github.workspace}}/rp3802
        # bash required otherwise this mysteriously (no error) fails at "Generating cyw43_bus_pio_spi.pio.h"
        shell: bash
        run: |
          rm -f rp3802_pico.uf2
          mkdir build_pico
          cd build_pico
          cmake .. -G "Unix Makefiles" -DPICO_SDK_PATH=../../pico-sdk -DCMAKE_BUILD_TYPE=Release -DPICO_BOARD=pico
          cmake --build .
          cp -p rp3802.uf2 ../rp3802_pico.uf2

      - name: Build Project (pico2)
        working-directory: ${{github.workspace}}/rp3802
        # bash required otherwise this mysteriously (no error) fails at "Generating cyw43_bus_pio_spi.pio.h"
        shell: bash
        run: |
          rm -f rp3802_pico2.uf2
          mkdir build_pico2
          cd build_pico2
          cmake .. -G "Unix Makefiles" -DPICO_SDK_PATH=../../pico-sdk -DCMAKE_BUILD_TYPE=Release -DPICO_BOARD=pico2
          cmake --build .
          cp -p rp3802.uf2 ../rp3802_pico2.uf2

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rp3802_uf2
          path: |
            ${{github.workspace}}/rp3802/rp3802_pico.uf2
            ${{github.workspace}}/rp3802/rp3802_pico2.uf2

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/release/')

    steps:
      - name: Extract version name from tag
        id: extract_version
        run: |
          TAG="${GITHUB_REF#refs/tags/release/}"
          echo "version=$TAG" >> $GITHUB_OUTPUT

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: rp3802_uf2
          path: ./downloaded

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.extract_version.outputs.version }}
          files: |
            downloaded/rp3802_pico.uf2
            downloaded/rp3802_pico2.uf2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}